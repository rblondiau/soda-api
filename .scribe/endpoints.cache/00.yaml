## Autogenerated by Scribe. DO NOT MODIFY.

name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/sodas
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'GET api/sodas'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":1,"name":"odit","carbonated":true,"caffeinated":false,"description":"Vitae voluptas quos unde enim sit aperiam quia.","brand":"provident"},{"id":2,"name":"excepturi","carbonated":false,"caffeinated":true,"description":"Rerum enim tempore aliquam.","brand":"libero"},{"id":3,"name":"corporis","carbonated":false,"caffeinated":true,"description":"Nesciunt cumque aperiam rerum.","brand":"in"},{"id":4,"name":"maiores","carbonated":false,"caffeinated":false,"description":"Nobis quis quibusdam quia est dolorum recusandae.","brand":"in"},{"id":5,"name":"dolorem","carbonated":false,"caffeinated":true,"description":"Consequatur dolorum est laboriosam.","brand":"provident"},{"id":6,"name":"vel","carbonated":false,"caffeinated":false,"description":"Minima magnam autem nihil sit consequatur.","brand":"repellat"},{"id":7,"name":"porro","carbonated":true,"caffeinated":false,"description":"Voluptatem sunt velit est aliquam.","brand":"a"},{"id":8,"name":"et","carbonated":true,"caffeinated":true,"description":"Asperiores autem quos neque quibusdam.","brand":"repellat"},{"id":9,"name":"cum","carbonated":false,"caffeinated":true,"description":"Vitae aut repellat accusamus ipsam ut eos.","brand":"consequatur"},{"id":10,"name":"debitis","carbonated":true,"caffeinated":false,"description":"Rerum amet expedita est quis.","brand":"ut"},{"id":11,"name":"Nalu Updated","carbonated":true,"caffeinated":false,"description":null,"brand":null},{"id":13,"name":"Coca-Cola","carbonated":true,"caffeinated":false,"description":null,"brand":null},{"id":14,"name":"Coca-Cola","carbonated":true,"caffeinated":false,"description":null,"brand":null},{"id":15,"name":"Zyla","carbonated":true,"caffeinated":true,"description":"New energy of spadel","brand":"perspiciatis"}]}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '59'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/sodas
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'POST api/sodas'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: 'n'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      description:
        name: description
        description: 'Must not be greater than 255 characters.'
        required: false
        example: 'Sed ad et in commodi.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      carbonated:
        name: carbonated
        description: ''
        required: true
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
      caffeinated:
        name: caffeinated
        description: ''
        required: true
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
      brand_id:
        name: brand_id
        description: ''
        required: true
        example: ipsam
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      name: 'n'
      description: 'Sed ad et in commodi.'
      carbonated: true
      caffeinated: false
      brand_id: ipsam
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/sodas/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'GET api/sodas by id'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the soda.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":1,"name":"odit","carbonated":true,"caffeinated":false,"description":"Vitae voluptas quos unde enim sit aperiam quia.","brand":"provident"}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '58'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/sodas/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'PUT PATCH api/sodas'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the soda.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: ntdlfssvzfkilwt
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      description:
        name: description
        description: 'Must not be greater than 255 characters.'
        required: false
        example: 'Repudiandae enim mollitia illum accusamus.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      carbonated:
        name: carbonated
        description: ''
        required: true
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
      caffeinated:
        name: caffeinated
        description: ''
        required: true
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
      brand_id:
        name: brand_id
        description: ''
        required: true
        example: nostrum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      name: ntdlfssvzfkilwt
      description: 'Repudiandae enim mollitia illum accusamus.'
      carbonated: false
      caffeinated: false
      brand_id: nostrum
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/sodas/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'DELETE api/sodas'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the soda.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/brands
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'GET api/brands'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":1,"name":"libero","founded_year":1993,"country":"ipsa"},{"id":2,"name":"perspiciatis","founded_year":1981,"country":"et"},{"id":3,"name":"repellat","founded_year":2017,"country":"labore"},{"id":4,"name":"at","founded_year":2011,"country":"est"},{"id":5,"name":"in","founded_year":1991,"country":"ut"},{"id":6,"name":"ut","founded_year":2000,"country":"quam"},{"id":7,"name":"consequatur","founded_year":2002,"country":"iure"},{"id":8,"name":"provident","founded_year":1988,"country":"atque"},{"id":9,"name":"maxime","founded_year":1974,"country":"veniam"},{"id":10,"name":"a","founded_year":1992,"country":"qui"},{"id":11,"name":"Unilever","founded_year":null,"country":null},{"id":12,"name":"Spadel","founded_year":null,"country":null},{"id":13,"name":"Spadel2","founded_year":null,"country":null},{"id":14,"name":"Spadel3","founded_year":null,"country":null},{"id":15,"name":"Spadel5","founded_year":2000,"country":null},{"id":16,"name":"Spadel10","founded_year":2020,"country":"BE"}]}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '57'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/brands
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'POST api/brands'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: gonl
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      founded_year:
        name: founded_year
        description: 'Must be at least 1900. Must not be greater than 2024.'
        required: false
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      country:
        name: country
        description: 'Must not be greater than 255 characters.'
        required: false
        example: opauslkjbvimeu
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      name: gonl
      founded_year: 17
      country: opauslkjbvimeu
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/brands/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'GET api/brands by id'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the brand.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":1,"name":"libero","founded_year":1993,"country":"ipsa"}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '56'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/brands/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'PUT PATCH api/brands'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the brand.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: anwmovffajbbeimxnrupjgve
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      founded_year:
        name: founded_year
        description: 'Must be at least 1900. Must not be greater than 2024.'
        required: false
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      country:
        name: country
        description: 'Must not be greater than 255 characters.'
        required: false
        example: hwupcsk
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      name: anwmovffajbbeimxnrupjgve
      founded_year: 17
      country: hwupcsk
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/brands/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'DELETE api/brands'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the brand.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/user
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
